{
    "english_text": "In this paper we present a general method for determining the capacity of low-density paritycheck codes under message-passing decoding when used over any binary-input memoryless channel with discrete or continuous output alphabets. Transmitting at rates below this capacity, a randomly chosen element of the given ensemble will achieve an arbitrarily small target probability of error with a probability that approaches one exponentially fast in the length of the code. (By concatenating with an appropriate outer code one can achieve a probability of error that approaches zero exponentially fast in the length of the code with arbitrarily small loss in rate.) Conversely, transmitting at rates above this capacity the probability of error is bounded away from zero by a strictly positive constant which is independent of the length of the code and of the number of iterations performed. Our results are based on the observation that the concentration of the performance of the decoder around its average performance, as observed by Luby et. al. [1] in the case of a binary symmetric channel and a binary message passing algorithm, is a general phenomenon. For the particularly important case of belief-propagation decoders, we provide an effective algorithm to determine the corresponding capacity to any desired degree of accuracy. The ideas presented in this paper are broadly applicable and extensions of the general method to low-density parity-check codes over larger alphabets, turbo codes, and other concatenated coding schemes are outlined. Index Terms – low-density parity-check codes, turbo codes, message-passing decoders, iterative decoding, belief-propagation, turbo decoding",
    "turkish_text": "Bu makalede, herhangi bir ikili giriş hatasız kanalına (diskret veya sürekli çıktı alfabetiyle) kullanılan mesaj geçişi ile kod çözme sırasında düşük yoğunluklu parite kontrol kodlarının kapasitesini belirlemek için genel bir yöntem sunuyoruz. Kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını, kodun uzunluğuna bağlı olarak kodlama oranının altında iletim yapan rastgele seçilen bir eleman, hedef hata olasılığını",
    "translation_is_valid": false,
    "human_decision": "FAIL"
}